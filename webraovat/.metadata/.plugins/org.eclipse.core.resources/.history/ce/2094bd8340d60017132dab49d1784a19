package DAO;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import Bean.User;
import Database.DB;

public class UserDAO extends BaseDAO{
	
	public int createUser(User user) throws SQLException {
		int result = 0;
		
		DB.Instance().Connect();
		String query = "INSERT INTO dbo.[USER](phone,address,gender,birthday,fullName,email,userName,passWord,level,status,reportsNumber) "
					+ "VALUES(?,?,?,?,?,?,?,?,?,?,?)";
		PreparedStatement cmd = DB.Instance().cn.prepareStatement(query);
		cmd.setString(1, user.getPhone());
		cmd.setString(2, user.getAddress());
		cmd.setBoolean(3, user.isGender());
		cmd.setDate(4, new java.sql.Date(user.getBirthday().getTime()));
		cmd.setString(5, user.getFullName());
		cmd.setString(6, user.getEmail());
		cmd.setString(7, user.getUserName());
		cmd.setString(8, user.getPassWord());
		cmd.setInt(9, user.getLevel());
		cmd.setInt(10, user.getStatus());
		cmd.setInt(11, user.getReportsNumber());
		
		result = cmd.executeUpdate();
		
		return result;
	}
	
	public User findUserByResultSet(ResultSet rs) {
		User user = new User();
		try {
			user.setUserID(rs.getLong("UserID"));
			user.setPhone(rs.getString("Phone"));
			user.setAddress(rs.getString("Address"));
			user.setGender(rs.getBoolean("Gender"));
			user.setBirthday(rs.getDate("BirthDay"));
			user.setFullName(rs.getString("FullName"));
			user.setEmail(rs.getString("Email"));
			user.setUserName(rs.getString("UserName"));
			user.setPassWord(rs.getString("Password"));
			user.setLevel(rs.getInt("Level"));
			user.setStatus(rs.getInt("Status"));
			user.setReportsNumber(rs.getInt("ReportsNumber"));
		}catch(Exception e) {
			e.printStackTrace();
		}
		return user;
	}
	public List<User> findAll() throws SQLException{
		List<User> result = new ArrayList<User>();
		
			DB.Instance().Connect();
			ResultSet rs = findAllByTableName("User");
			
			while(rs.next()) {
				User user = findUserByResultSet(rs);
				result.add(user);
			}
			
			rs.close();
			DB.Instance().cn.close();
		return result;
	}
}
